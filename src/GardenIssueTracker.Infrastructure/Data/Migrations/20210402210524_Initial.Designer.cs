// <auto-generated />
using System;
using GardenIssueTracker.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GardenIssueTracker.Infrastructure.Data.Migrations
{
    [DbContext(typeof(GardenDbContext))]
    [Migration("20210402210524_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("GardenItemId")
                        .HasColumnType("int");

                    b.Property<bool>("IsIssue")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GardenItemId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.Garden", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Gardens");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.GardenItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatePlanted")
                        .HasColumnType("datetime2");

                    b.Property<int>("GardenId")
                        .HasColumnType("int");

                    b.Property<int>("PlantVarietyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GardenId");

                    b.HasIndex("PlantVarietyId");

                    b.ToTable("GardenItems");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.PlantGenus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommonName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("CommonName")
                        .IsUnique();

                    b.HasIndex("ScientificName")
                        .IsUnique();

                    b.ToTable("PlantGenera");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.PlantVariety", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PlantGenusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PlantGenusId");

                    b.ToTable("PlantVarieties");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.Comment", b =>
                {
                    b.HasOne("GardenTrackerServer.Core.Domain.Entities.GardenItem", "GardenItem")
                        .WithMany("Comments")
                        .HasForeignKey("GardenItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GardenItem");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.GardenItem", b =>
                {
                    b.HasOne("GardenTrackerServer.Core.Domain.Entities.Garden", "Garden")
                        .WithMany("GardenItems")
                        .HasForeignKey("GardenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GardenTrackerServer.Core.Domain.Entities.PlantVariety", "PlantVariety")
                        .WithMany("GardenItems")
                        .HasForeignKey("PlantVarietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Garden");

                    b.Navigation("PlantVariety");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.PlantVariety", b =>
                {
                    b.HasOne("GardenTrackerServer.Core.Domain.Entities.PlantGenus", "PlantGenus")
                        .WithMany("PlantVarieties")
                        .HasForeignKey("PlantGenusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlantGenus");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.Garden", b =>
                {
                    b.Navigation("GardenItems");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.GardenItem", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.PlantGenus", b =>
                {
                    b.Navigation("PlantVarieties");
                });

            modelBuilder.Entity("GardenTrackerServer.Core.Domain.Entities.PlantVariety", b =>
                {
                    b.Navigation("GardenItems");
                });
#pragma warning restore 612, 618
        }
    }
}
